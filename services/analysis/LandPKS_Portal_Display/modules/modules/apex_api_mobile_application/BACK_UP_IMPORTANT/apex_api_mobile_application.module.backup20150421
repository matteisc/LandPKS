<?phpinclude_once 'apex_api_mobile_application.inc';include_once 'apex_api_mobile_application_defined.inc';/* * Implemetn hook_permission() */function apex_api_mobile_application_permission(){  return array(    'external device insert data from mobile to server' => array(          'title'=> t('external device insert data from mobile to server'),          'description' => t('external device insert data from mobile to server'),  ),    'external request export input data follow application' => array(          'title'=> t('external request export input data follow application'),          'description' => t('external request export input data follow application'),  ),  );}/** * NGUYEN HAI THANH * HOOK MENU */function apex_api_mobile_application_menu(){  $items = array();  $items[APEX_ADMIN_TOOL] = array(          'title' => 'LandPKS',          'description' => 'LandPKS.',          'page callback' => 'display_thanhnh_functions',          'access arguments' => array('access content'),          'type' => MENU_NORMAL_ITEM,  );  $items[APEX_ADMIN_TOOL_VIEW_DATA] = array(          'title' => 'LandPKS View Data',          'description' => 'LandPKS View Data.',          'page callback' => 'display_thanhnh_functions',          'access arguments' => array('access content'),          'type' => MENU_NORMAL_ITEM,  );  $items[APEX_ADMIN_TOOL_VIEW_DATA_INSERT_FROM_MOBILE_LANDPKS] = array(          'title' => 'LandPKS InputData From Mobile',          'description' => 'LandPKS InputData From Mobile.',          'page callback' => 'drupal_get_form',          'page arguments' => array('list_landpks_input_data_from_mobile_form',1),          'access arguments' => array('administer user'),          'type' => MENU_NORMAL_ITEM,  );  $items[APEX_ADMIN_TOOL_RUN_PYTHON_APEX] = array(          'title' => 'LandPKS Run Python Model',          'description' => 'LandPKS Run Python Model.',          'page callback' => 'drupal_get_form',          'page callback' => 'display_thanhnh_functions',          'access arguments' => array('access content'),          'type' => MENU_NORMAL_ITEM,  );  $items[APEX_APIS_INSERT_DATA_FROM_MOBILE] = array(        'title' => 'LandPKS APIs Insert Data',        'description' => 'LandPKS APIs Insert Data.',        'page callback' => 'api_insert_landpks_input_data_from_mobile_apps',        'access arguments' => array('external device insert data from mobile to server'),        'type' => MENU_CALLBACK,   );  $items[APEX_APIS_INSERT_DATA_FROM_MOBILE_RHM] = array(        'title' => 'RHM APIs Insert Data',        'description' => 'RHM APIs Insert Data.',        'page callback' => 'api_insert_rhm_input_data_from_mobile_apps',        'access arguments' => array('external device insert data from mobile to server'),        'type' => MENU_CALLBACK,   );    $items[APEX_APIS_TEST_SERVER] = array(        'title' => 'LandPKS APIs Test Server',        'description' => 'LandPKS APIs Test Server.',        'page callback' => 'api_test_landpks_server',        'access arguments' => array('external device insert data from mobile to server'),        'type' => MENU_CALLBACK,   );    $items[APEX_APIS_REQUEST_GDAL_DATA] = array(        'title' => 'GDAL APIs Request Data',        'description' => 'GDAL APIs Request Data.',        'page callback' => 'api_request_gdal_data_of_plot',        'access arguments' => array('external device insert data from mobile to server'),        'type' => MENU_CALLBACK,   );      $items[APEX_APIS_REQUEST_RHM_DATA] = array(        'title' => 'RHM APIs Request Data',        'description' => 'RHM APIs Request Data.',        'page callback' => 'api_request_rhm_plots_export_data',        'access arguments' => array('external request export input data follow application'),        'type' => MENU_CALLBACK,   );    $items[APEX_APIS_REQUEST_LANDPKS_DATA] = array(        'title' => 'LandPKS APIs Request Data',        'description' => 'LandPKS APIs Request Data.',        'page callback' => 'api_request_landpks_plots_export_data',        'access arguments' => array('external request export input data follow application'),        'type' => MENU_CALLBACK,   );  $items[APEX_FORM_REQUEST_EXPORT_INPUT_DATA] = array(          'title' => 'Request Export Data',          'description' => 'Request Export Data.',          'page callback' => 'drupal_get_form',          'page arguments' => array('form_request_export_data_for_rhm_landpks_application_form',1),          'access arguments' => array('external request export input data follow application'),          'type' => MENU_NORMAL_ITEM,  );    $items[APEX_FORM_REQUEST_EXPORT_INPUT_DATA_RESULT] = array(          'title' => 'Export Data',          'description' => 'Export Data.',          'page callback' => 'action_export_input_data_application',          'access arguments' => array('external request export input data follow application'),          'type' => MENU_CALLBACK,	);    return $items;}/*************************************************************************************************//**************************************HOOK FORM**************************************************//*************************************************************************************************/function form_request_export_data_for_rhm_landpks_application_form($form, &$form_state){   global $user;   $form['recorder_name'] = array(           '#type' => 'textfield',           '#description' => t('Input Recorder Name in plot you want to get'),           '#title' => t('Enter your recorder name :'),           '#default_value' => $user->mail,           '#size' => 50,           '#maxlength' => 250,   );      $form['data_export'] = array(           '#title' => t('<b>Export ALL plots in the database (download may take several minutes</b>)') ,           '#type' => 'checkbox',           '#description' => t(''),           '#default_value' => 0,           '#attributes' => array('onclick' => 'if (document.getElementById("edit-data-export").value == 0){             										document.getElementById("edit-data-export").value = 1;              										document.getElementsByClassName("form-item form-type-textfield form-item-recorder-name")[0].style.visibility = "visible";             										document.getElementById("edit-recorder-name").disabled = false;              										document.getElementById("edit-recorder-name").focus();             																						} else {													document.getElementById("edit-recorder-name").value = ""; 													document.getElementById("edit-data-export").value = 0; 													document.getElementById("edit-recorder-name").disabled = true;													document.getElementsByClassName("form-item form-type-textfield form-item-recorder-name")[0].style.visibility = "hidden";												}')   );      $options = array(       1 => 'ALL',       2 => 'Land Info',       3 => 'RHM',   );   $form['application'] = array(       '#type' => 'select',       '#description' => t('Application'),       '#default_value' => 3,       '#title' => t('Applications'),       '#options' => $options,       '#maxlength' => 80,       '#attributes' => array('onchange' => 'if (document.getElementById("edit-application").value == 3) {       												document.getElementById("edit-data-visualization").style.visibility = "visible"; 											 } else {											 		document.getElementById("edit-data-visualization").style.visibility = "hidden";}											 '),    );      $form['submit'] = array(      '#value' => t('Export'),      '#type' => 'submit',      '#title' => t('Export'),      '#submit' => array('form_request_export_data_for_rhm_landpks_application_form_submit'),   );      if (isVisile($user)==true){     $form['data_visualization'] = array(        '#value' => t('Data Visualization'),        '#type' => 'submit',        '#title' => t('Data Visualization'),        '#submit' => array('form_request_export_data_for_rhm_landpks_application_form_submit_visualization'),     );   }      return $form;}/** * NGUYEN HAI THANH * Enter description here ... * @param unknown_type $form * @param unknown_type $form_state */function form_request_export_data_for_rhm_landpks_application_form_submit_visualization(&$form, &$form_state){  $recorder_name = $form_state['values']['recorder_name'];  if ($form_state['values']['data_export'] == 1){    $recorder_name = "";  }  /* Delete redundant csv file in pulic_csv_url */    /* Ending delete */  $application = $form_state['values']['application'];  $data = get_list_RHM_record_information($recorder_name);  $csv_rul = save_to_csv_file($data,"abc");  $form_state['redirect'] = URL_SHINY_RHM_CHARTS . "CSV_URL=$csv_rul"; }/** * NGUYEN HAI THANH * Enter description here ... * @param unknown_type $form * @param unknown_type $form_state */function form_request_export_data_for_rhm_landpks_application_form_submit($form, &$form_state){  $recorder_name = $form_state['values']['recorder_name'];  $application = $form_state['values']['application'];  if ($form_state['values']['data_export'] == 1){    $recorder_name = "";  }  $form_state['redirect'] = "admin/APEX/View_Data/data_export/result/" . $recorder_name . "/" . $application;}/** * NGUYEN HAI THANH * Enter description here ... */function action_export_input_data_application(){   $recorder_name = arg(5);   $application = arg(6);    if ($application == 1){      export_landpks_records_data_by_CSV_file($recorder_name);      export_rhm_records_data_by_CSV_file($recorder_name);       } else if ($application == 2){      export_landpks_records_data_by_CSV_file($recorder_name);   } else if ($application == 3){      export_rhm_records_data_by_CSV_file($recorder_name);   } else if ($application == 4) {      export_gdal_data_by_CSV_file(null, null, $recorder_name, null);   }}/*************************************************************************************************//**************************************HOOK FORM**************************************************//*************************************************************************************************/function api_test_landpks_server(){  echo "Server is OK";}function test(){  $dbName = $_SERVER["DOCUMENT_ROOT"] . DATABASE_PATH_FILE;  //echo $dbName;  if (!file_exists($dbName)){    return error_request_from_external_device(99, 'Database is not existed');  }  $db = new PDO("odbc:DRIVER={Microsoft Access Driver (*.mdb)}; DBQ=$dbName; Uid=; Pwd=;");  $sql  = "SELECT MU_GLOBAL FROM HWSD_DATA";  $result = $db->query($sql);  $row = $result->fetch();  return success_api();  $output = exec('cd Python_APEX && python C:\xampp\htdocs\APEX\Python_APEX\test.py');  $output = exec('python C:\xampp\htdocs\APEX\Python_APEX\6_OPERATIONS_PROJECT\main_OPERATION.py -rm');  echo $output;}/** * NGUYEN HAI THANH * Enter description here ... * @param unknown_type $form * @param unknown_type $form_state */function list_landpks_input_data_from_mobile_form($form, &$form_state){  /* Checking security */  global $user;  $admin = user_access('administer users');  if (!$admin){    drupal_goto('user');    drupal_session_destroy_uid($user->uid);  }  /* End Check */  $header = array(	        'name' => array('field' => 'name', 'data' => t('Name')),			'latitude' => array('field' => 'latitude', 'data' => t('Latitude')),		    'longitude' => array('field' => 'longitude', 'data' => t('Longitude')),		    'insert_normal_time' => array('field' => 'insert_normal_time', 'data' => t('Insert Time')),		    'ip_address' => array('field' => 'ip_address', 'data' => t('IP Address')),		    'view' => array('field' => 'view', 'data' => t('View')), 			    'edit' => array('field' => 'edit', 'data' => t('Edit')),			'run' => array('field' => 'run', 'data' => t('Run')),  );  $option = get_all_landpks_input_data_from_mobile_order_by(1);  $form['content_list_price_plan'] = array(	       '#type' => 'tableselect',		   '#options' => $option,           '#header' => $header,           '#empty' => t('There is no eligible data'),           '#caption' => t('Danh s&#225;ch nh&#243;m &#273;&#7875; ki&#7875;m so&#225;t'),  );  $form['back'] = array(	    '#type' => 'link',	    '#href' => '',		'#title' => t('Back and Cancel'),  );  return $form;}/** * NGUYEN HAI THANH */function api_request_landpks_plots_export_data(){try{    $export_type = $_GET['export_type'];    $export_type = trim($export_type);    if (isEmpty($export_type)){      return error_request_from_external_device("101", "Should be select exportation type");    }        if (strtoupper($export_type) == 'CSV'){        $record_name = $_GET['recorder_name'];      $record_name = trim($record_name);      $record_name = standard_string_prevent_sql_injection($record_name);      //echo "Boston - America";      export_landpks_records_data_by_CSV_file($record_name);    } else if (strtoupper($export_type) == 'JSON') {      /** Will be update later **/    } else {          }      } catch (Exception $ex){    return error_request_from_external_device('990', $ex->getMessage());  }}/* * NGUYEN HAI THANH */function api_request_rhm_plots_export_data(){  try{    $export_type = $_GET['export_type'];    $export_type = trim($export_type);    if (isEmpty($export_type)){      return error_request_from_external_device("101", "Should be select exportation type");    }        if (strtoupper($export_type) == 'CSV'){        $record_name = $_GET['recorder_name'];      $record_name = trim($record_name);      $record_name = standard_string_prevent_sql_injection($record_name);      export_rhm_records_data_by_CSV_file($record_name);    } else if (strtoupper($export_type) == 'JSON') {      /** Will be update later **/    } else {          }      } catch (Exception $ex){    return error_request_from_external_device('990', $ex->getMessage());  }}/** * NGUYEN HAI THANH * Enter description here ... */function api_request_gdal_data_of_plot(){  try{    $export_type = $_GET['export_type'];    $export_type = trim($export_type);    if (isEmpty($export_type)){      return error_request_from_external_device("101", "Should be select exportation type");    }        if (strtoupper($export_type) == 'CSV'){      $from_record_id = $_GET['from_record_id'];      $from_record_id = trim($from_record_id);      $from_record_id = standard_string_prevent_sql_injection($from_record_id);            $to_record_id = $_GET['to_record_id'];      $to_record_id = trim($to_record_id);      $to_record_id = standard_string_prevent_sql_injection($to_record_id);            $record_name = $_GET['record_name'];      $record_name = trim($record_name);      $record_name = standard_string_prevent_sql_injection($record_name);            $country_code = $_GET['country_code'];      $country_code = trim($country_code);      $country_code = standard_string_prevent_sql_injection($country_code);            export_gdal_data_by_CSV_file($from_record_id, $to_record_id, $record_name, $country_code);    } else if (strtoupper($export_type) == 'JSON') {      /** Will be update later **/    } else {          }      } catch (Exception $ex){    return error_request_from_external_device('990', $ex->getMessage());  }    }/** * NGUYEN HAI THANH * Enter description here ... * @param unknown_type $record_name */function export_landpks_records_data_by_CSV_file($record_name){  $data = get_list_LandPKS_record_information($record_name);  header("Content-type: application/csv");  header("Content-Disposition: attachment; filename=\"Export_LandPKS_Input_Data.csv\"");  header("Pragma: no-cache");  header("Expires: 0");  $handle = fopen('php://output', 'w');  fputcsv($handle, array(       'name','latitude','longitude','modified_date','land_cover','grazed','flooding','slope','slope_shape',       'rock_fragment_for_soil_horizon_1','rock_fragment_for_soil_horizon_2','rock_fragment_for_soil_horizon_3','rock_fragment_for_soil_horizon_4',       'rock_fragment_for_soil_horizon_5','rock_fragment_for_soil_horizon_6','rock_fragment_for_soil_horizon_7',       'texture_for_soil_horizon_1','texture_for_soil_horizon_2','texture_for_soil_horizon_3','texture_for_soil_horizon_4','texture_for_soil_horizon_5',       'texture_for_soil_horizon_6','texture_for_soil_horizon_7','surface_cracking','surface_salt','max_temp_Jannuary', 'max_temp_February', 'max_temp_March',       'max_temp_April','max_temp_May', 'max_temp_June', 'max_temp_July','max_temp_Aug', 'max_temp_September', 'max_temp_October','max_temp_November','max_temp_December',       'min_temp_Jannuary','min_temp_February','min_temp_March','min_temp_April','min_temp_May','min_temp_June','min_temp_July','min_temp_Aug','min_temp_September',       'min_temp_October','min_temp_November','min_temp_December','precipitation_Jannuary','precipitation_February','precipitation_March','precipitation_April',       'precipitation_May','precipitation_June','precipitation_July','precipitation_Aug','precipitation_September','precipitation_October','precipitation_November','precipitation_December',       'precipitation_annual (mm)', 'soil_profile_AWC (cm)', 'Elevation (m)',' FAO Length of Growing Period (days/year)','Aridity Index'    ));  foreach ($data as $job) {        fputcsv($handle,array($job->name,$job->latitude,$job->longitude,$job->insert_normal_time,$job->land_cover,                              $job->grazed,$job->flooding,$job->slope,$job->slope_shape,$job->rock_fragment_for_soil_horizon_1,$job->rock_fragment_for_soil_horizon_2,                              $job->rock_fragment_for_soil_horizon_3,$job->rock_fragment_for_soil_horizon_4, $job->rock_fragment_for_soil_horizon_5, $job->rock_fragment_for_soil_horizon_6,$job->rock_fragment_for_soil_horizon_7,                              $job->texture_for_soil_horizon_1,                              $job->texture_for_soil_horizon_2, $job->texture_for_soil_horizon_3, $job->texture_for_soil_horizon_4, $job->texture_for_soil_horizon_5, $job->texture_for_soil_horizon_6, $job->texture_for_soil_horizon_7,                              $job->surface_cracking,$job->surface_salt,$job->climate_max_temp_jan,$job->climate_max_temp_feb,$job->climate_max_temp_mar,$job->climate_max_temp_apr,                              $job->climate_max_temp_may,$job->climate_max_temp_jun,$job->climate_max_temp_jul,$job->climate_max_temp_aug,$job->climate_max_temp_sep,$job->climate_max_temp_oct,                              $job->climate_max_temp_nov,$job->climate_max_temp_dec,$job->climate_min_temp_jan,$job->climate_min_temp_feb, $job->climate_min_temp_mar, $job->climate_min_temp_apr,                              $job->climate_min_temp_may,$job->climate_min_temp_jun,$job->climate_min_temp_jul,$job->climate_min_temp_aug,$job->climate_min_temp_sep,$job->climate_min_temp_oct,                              $job->climate_min_temp_nov,$job->climate_min_temp_dec,$job->climate_precip_jan,$job->climate_precip_feb,$job->climate_precip_mar,$job->climate_precip_apr,$job->climate_precip_may,                              $job->climate_precip_jun,$job->climate_precip_jul,$job->climate_precip_aug,$job->climate_precip_sep,$job->climate_precip_oct,$job->climate_precip_nov,$job->climate_precip_dec,                              $job->climate_precip_annual,$job->soil_profile_awc,$job->old_elevation,$job->fao_lgp_value,$job->aridity                        )               );  }  fclose($handle);}/** * EXPORT RHM CSV FUNTION: * Enter description here ... * @param unknown_type $record_name */function export_rhm_records_data_by_CSV_file($record_name){  $data = get_list_RHM_record_information($record_name);  /* Build CSV File in Sever */  /* End Build */  header("Content-type: application/csv");  header("Content-Disposition: attachment; filename=\"Export_RHM_Data.csv\"");  header("Pragma: no-cache");  header("Expires: 0");  $handle = fopen('php://output', 'w');  fputcsv($handle, array(       'name','transect','segment','date','canopy_height','canopy_gap','basal_gap','species_1_density','species_2_density','species_list',       'stick_segment_0','stick_segment_1','stick_segment_2','stick_segment_3','stick_segment_4','bare_total','trees_total','shrubs_total','sub_shrubs_total',       'perennial_grasses_total','annuals_total','herb_litter_total','wood_litter_total','rock_total'     ));  foreach ($data as $job) {        fputcsv($handle,array($job->name,$job->transect,$job->segment,$job->date,$job->canopy_height,$job->canopy_gap,$job->basal_gap,                              $job->species_1_density,$job->species_2_density,$job->species_list,$job->stick_segment_0,$job->stick_segment_1,$job->stick_segment_2,                              $job->stick_segment_3,$job->stick_segment_4, $job->bare_total, $job->trees_total,$job->shrubs_total,$job->sub_shrubs_total,$job->perennial_grasses_total,                              $job->annuals_total,$job->herb_litter_total,$job->wood_litter_total,$job->rock_total                        )               );  }  fclose($handle);}/** * MAIN FUNCTION : Export GDAL Data to CSV File * Enter description here ... * @param unknown_type $from_record_id * @param unknown_type $to_record_id * @param unknown_type $record_name * @param unknown_type $country_code */function export_gdal_data_by_CSV_file($from_record_id,$to_record_id,$record_name,$country_code) {  $data = get_list_gdal_record_information($from_record_id, $to_record_id, $record_name, $country_code);  header("Content-type: application/csv");  header("Content-Disposition: attachment; filename=\"Jobs_".date('M-j-y', $from)."-".date('M-j-y', $to).".csv\"");  header("Pragma: no-cache");  header("Expires: 0");  $handle = fopen('php://output', 'w');  fputcsv($handle, array(        'ID','record_id','plot_id','record_name','latitude','longitude','country_code_data','country_name','clim_slate_weather_data','clim_precipitation_data','clim_gdd','clim_aridity_index',        'clim_kopgeiger','clim_kopgeiger_detail','clim_fao_lgp','clim_fao_lgp_detail','clim_modis_evapotrans','clim_precip_novdecjan','clim_precip_febmarapr','clim_precip_mayjunjul','clim_precip_augsepoct','clim_wind_data_1','clim_wind_data_2',        'clim_wind_data_3','clim_wind_data_4','clim_wind_data_5','clim_wind_data_6','clim_wind_data_7','clim_wind_data_8','clim_wind_data_9','clim_wind_data_10','clim_wind_data_11','clim_wind_data_12',        'soil_hwsd_data','soil_depth_gaez','soil_depth_gaez_detail','soil_textclass_gaez','soil_textclass_gaez_detail','soil_fert_gaez','soil_fert_gaez_detail','soil_workab_gaez','soil_workab_gaez_detail','soil_toxic_gaez','soil_toxic_gaez_detail','topog_elevation','topog_aspect','topog_geolage','topog_dem_global','topog_dem_old',        'topog_slope_global','topog_landform_global','topog_twi_global','topog_topi_global','topog_israd_global','landcover_modis_2001','landcover_modis_2001_detail','landcover_modis_2002','landcover_modis_2002_detail','landcover_modis_2004','landcover_modis_2004_detail','landcover_modis_2010','landcover_modis_2010_detail',        'landcover_modis_2011','landcover_modis_2011_detail','landcover_modis_2012','landcover_modis_2012_detail','landcover_cult_gaez','landcover_irrcult_gaez','landcover_grass_gaez','landcover_protect_gaez','landcover_protect_gaez_detail','landcover_agnprotect_gaez','landcover_agnprotect_gaez_detail','vegind_modis_evi_m',        'vegind_modis_evi_sd','vegind_modis_lai_m','vegind_modis_lai_sd','manage_cerealsuit_low_gaez','manage_cerealsuit_low_gaez_detail','manage_cerealsuit_hight_gaez','manage_cerealsuit_hight_gaez_detail','pop_density','afsis_topog_dem','afsis_topog_twi','afsis_topog_sca',        'country_name_2','slope_percentage','slope_reclassified','plane_curvature','profile_curvature','curvature','dem','aspect'            ));  foreach ($data as $job) {        fputcsv($handle,array($job->ID,$job->record_id,$job->plot_id,$job->record_name,$job->latitude,$job->longitude,                              $job->country_code_data,$job->country_name,$job->clim_slate_weather_data,$job->clim_precipitation_data,$job->clim_gdd,$job->clim_aridity_index,$job->clim_kopgeiger,$job->clim_kopgeiger_detail,$job->clim_fao_lgp,$job->clim_fao_lgp_detail                              ,$job->clim_modis_evapotrans,$job->clim_precip_novdecjan,$job->clim_precip_febmarapr,$job->clim_precip_mayjunjul,$job->clim_precip_augsepoct,$job->clim_wind_data_1                              ,$job->clim_wind_data_2,$job->clim_wind_data_3,$job->clim_wind_data_4,$job->clim_wind_data_5,$job->clim_wind_data_6,$job->clim_wind_data_7                              ,$job->clim_wind_data_8,$job->clim_wind_data_9,$job->clim_wind_data_10,$job->clim_wind_data_11,$job->clim_wind_data_12,$job->soil_hwsd_data,$job->soil_depth_gaez,$job->soil_depth_gaez_detail                              ,$job->soil_textclass_gaez,$job->soil_textclass_gaez_detail,$job->soil_fert_gaez,$job->soil_fert_gaez_detail,$job->soil_workab_gaez,$job->soil_workab_gaez_detail,$job->soil_toxic_gaez,$job->soil_toxic_gaez_detail,$job->topog_elevation,$job->topog_aspect,$job->topog_geolage,$job->topog_dem_global                              ,$job->topog_dem_old,$job->topog_slope_global,$job->topog_landform_global,$job->topog_twi_global,$job->topog_topi_global,$job->topog_israd_global,$job->landcover_modis_2001,$job->landcover_modis_2001_detail                              ,$job->landcover_modis_2002,$job->landcover_modis_2002_detail,$job->landcover_modis_2004,$job->landcover_modis_2004_detail,$job->landcover_modis_2010,$job->landcover_modis_2010_detail,$job->landcover_modis_2011,$job->landcover_modis_2011_detail,$job->landcover_modis_2012,$job->landcover_modis_2012_detail,$job->landcover_cult_gaez,$job->landcover_irrcult_gaez                              ,$job->landcover_grass_gaez,$job->landcover_protect_gaez,$job->landcover_protect_gaez_detail,$job->landcover_agnprotect_gaez,$job->landcover_agnprotect_gaez_detail,$job->vegind_modis_evi_m,$job->vegind_modis_evi_sd,$job->vegind_modis_lai_m,$job->vegind_modis_lai_sd                              ,$job->manage_cerealsuit_low_gaez,$job->manage_cerealsuit_low_gaez_detail,$job->manage_cerealsuit_hight_gaez,$job->manage_cerealsuit_hight_gaez_detail,$job->pop_density,$job->afsis_topog_dem,$job->afsis_topog_twi,$job->afsis_topog_sca                              ,$job->country_name_2,$job->slope_percentage,$job->slope_reclassified,$job->plane_curvature,$job->profile_curvature,$job->curvature,$job->dem,$job->aspect));  }  fclose($handle);}/** * NGUYEN HAI THANH * Enter description here ... */function api_insert_rhm_input_data_from_mobile_apps(){  try {    $name = $_GET['name'];    $name = trim($name);    if (isEmpty($name)){      return error_request_from_external_device("101", "Name must be not NULL");    }    $name = standard_string_prevent_sql_injection($name);    $recorder_name = $_GET['recorder_name'];    $recorder_name = trim($recorder_name);    if (isEmpty($name)){      return error_request_from_external_device("102", "Recorder name must be not NULL");    }    $recorder_name = standard_string_prevent_sql_injection($recorder_name);        $transect = $_GET['transect'];    $transect = trim($transect);    $transect = standard_string_prevent_sql_injection($transect);    $transect = standard_string_2($transect);    $transect = strtoupper($transect);        $segment = $_GET['segment'];    $segment = trim($segment);    $segment = standard_string_prevent_sql_injection($segment);    $segment = standard_string_2($segment);        $date = $_GET['date'];    $date = trim($date);    $date = standard_string_prevent_sql_injection($date);        $canopy_height = $_GET['canopy_height'];    $canopy_height = trim($canopy_height);    //$canopy_height = standard_string_prevent_sql_injection($canopy_height);    $canopy_height = standard_string_2($canopy_height);           $canopy_gap = $_GET['canopy_gap'];    $canopy_gap = trim($canopy_gap);    $canopy_gap = standard_string_prevent_sql_injection($canopy_gap);    $canopy_gap = standard_string_2($canopy_gap);    $canopy_gap = strtoupper($canopy_gap);        $basal_gap = $_GET['basal_gap'];    $basal_gap = trim($basal_gap);    $basal_gap = standard_string_prevent_sql_injection($basal_gap);    $basal_gap = standard_string_2($basal_gap);    $basal_gap = strtoupper(($basal_gap));        $species_1_density = $_GET['species_1_density'];    $species_1_density = trim($species_1_density);    if (!is_numeric($species_1_density)){      return error_request_from_external_device("107", "Species 1 Density must be NUMERIC");    }        $species_2_density = $_GET['species_2_density'];    $species_2_density = trim($species_2_density);    if (!is_numeric($species_2_density)){      return error_request_from_external_device("107", "Species 2 Density must be NUMERIC");    }            $species_list = $_GET['species_list'];    $species_list = trim($species_list);    $species_list = standard_string_prevent_sql_injection($species_list);    $species_list = standard_string_2($species_list);            $stick_segment_0 = $_GET['stick_segment_0'];    $stick_segment_0 = trim($stick_segment_0);    $stick_segment_0 = standard_string_prevent_sql_injection($stick_segment_0);    $stick_segment_0 = strtoupper($stick_segment_0);        $stick_segment_1 = $_GET['stick_segment_1'];    $stick_segment_1 = trim($stick_segment_1);    $stick_segment_1 = standard_string_prevent_sql_injection($stick_segment_1);    $stick_segment_1 = strtoupper($stick_segment_1);        $stick_segment_2 = $_GET['stick_segment_2'];    $stick_segment_2 = trim($stick_segment_2);    $stick_segment_2 = standard_string_prevent_sql_injection($stick_segment_2);    $stick_segment_2 = strtoupper($stick_segment_2);        $stick_segment_3 = $_GET['stick_segment_3'];    $stick_segment_3 = trim($stick_segment_3);    $stick_segment_3 = standard_string_prevent_sql_injection($stick_segment_3);    $stick_segment_3 = strtoupper($stick_segment_3);        $stick_segment_4 = $_GET['stick_segment_4'];    $stick_segment_4 = trim($stick_segment_4);    $stick_segment_4 = standard_string_prevent_sql_injection($stick_segment_4);    $stick_segment_4 = strtoupper($stick_segment_4);        $bare_total = $_GET['bare_total'];    $bare_total = trim($bare_total);    if (!is_numeric($bare_total)){      return error_request_from_external_device("107", "Bare_total must be NUMERIC");    }        $trees_total = $_GET['trees_total'];    $trees_total = trim($trees_total);    if (!is_numeric($trees_total)){      return error_request_from_external_device("107", "Trees Total must be NUMERIC");    }        $shrubs_total = $_GET['shrubs_total'];    $shrubs_total = trim($shrubs_total);    if (!is_numeric($shrubs_total)){      return error_request_from_external_device("107", "Shrubs must be NUMERIC");    }        $sub_shrubs_total = $_GET['sub_shrubs_total'];    $sub_shrubs_total = trim($sub_shrubs_total);    if (!is_numeric($sub_shrubs_total)){      return error_request_from_external_device("107", "Sub-Shrubs must be NUMERIC");    }        $perennial_grasses_total = $_GET['perennial_grasses_total'];    $perennial_grasses_total = trim($perennial_grasses_total);    if (!is_numeric($perennial_grasses_total)){      return error_request_from_external_device("107", "Grasses must be NUMERIC");    }        $annuals_total = $_GET['annuals_total'];    $annuals_total = trim($annuals_total);    if (!is_numeric($annuals_total)){      return error_request_from_external_device("107", "Annual Total must be NUMERIC");    }        $herb_litter_total = $_GET['herb_litter_total'];    $herb_litter_total = trim($herb_litter_total);    if (!is_numeric($herb_litter_total)){      return error_request_from_external_device("107", "Herb Litter Total must be NUMERIC");    }        $wood_litter_total = $_GET['wood_litter_total'];    $wood_litter_total = trim($wood_litter_total);    if (!is_numeric($wood_litter_total)){      return error_request_from_external_device("107", "Wood Litter Total must be NUMERIC");    }        $rock_total = $_GET['rock_total'];    $rock_total = trim($rock_total);    if (!is_numeric($rock_total)){      return error_request_from_external_device("107", "Rock Total must be NUMERIC");    }        $ip_address = get_ip_address_client();        $result_insert = insert_rhm_input_data_from_apps_to_server($name, $recorder_name, $transect, $segment, $date, $canopy_height, $canopy_gap, $basal_gap, $species_1_density, $species_2_density, $species_list, $stick_segment_0, $stick_segment_1, $stick_segment_2, $stick_segment_3, $stick_segment_4, $bare_total, $trees_total, $shrubs_total, $sub_shrubs_total, $perennial_grasses_total, $annuals_total, $herb_litter_total, $wood_litter_total, $rock_total, $ip_address);        if ($result_insert == 0){      return error_request_from_external_device('999', 'Error Link : Please check link');    } else {      /* Calculate Summary data from group by name */      $object = get_output_value_RHM_record($name);      /* Insert output data to database */      $result_inser_output = insert_rhm_output_data($result_insert,$name, $object);      if ($object == false) {        return error_request_from_external_device('999', 'Error Link : Please check link');      } else {        return success_api_rhm($object);      }    }  } catch (Exception $ex){    return error_request_from_external_device('990', $ex->getMessage());  }}/** * NGUYEN HAI THANH * Enter description here ... */function api_insert_landpks_input_data_from_mobile_apps(){  try {    $name = $_GET['name'];    $name = trim($name);    if (isEmpty($name)){      return error_request_from_external_device("101", "Name must be not NULL");    }    $name = standard_string_prevent_sql_injection($name);//    if (check_exit_name($name)){//      return error_request_from_external_device("109", "Name is existed in Server");//    }    $recorder_name = $_GET['recorder_name'];    $recorder_name = trim($recorder_name);    if (isEmpty($name)){      return error_request_from_external_device("102", "Recorder name must be not NULL");    }    $recorder_name = standard_string_prevent_sql_injection($recorder_name);    $organization = $_GET['organization'];    $organization = trim($organization);    if (isEmpty($organization)){      //return error_request_from_external_device("103", "Organization must be not NULL");    }    $organization = standard_string_prevent_sql_injection($organization);    $latitude = $_GET['latitude'];    $latitude = trim($latitude);    if (isEmpty($latitude)){      return error_request_from_external_device("104", "Latitude must be not NULL");    }    if (!is_numeric($latitude)){      return error_request_from_external_device("105", "Latitude must be NUMERIC");    }    $longitude = $_GET['longitude'];    $longitude = trim($longitude);    if (isEmpty($longitude)){      return error_request_from_external_device("106", "Longitude must be not NULL");    }    if (!is_numeric($longitude)){      return error_request_from_external_device("107", "Longitude must be NUMERIC");    }    $city = $_GET['city'];    $city = trim($city);    if (isEmpty($city)){      //return error_request_from_external_device("108", "City must be not NULL");    }    $city = standard_string_prevent_sql_injection($city);    $modified_date = $_GET['modified_date'];    $modified_date = trim($modified_date);    if (isEmpty($modified_date)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");    }    $modified_date = standard_string_prevent_sql_injection($modified_date);    $land_cover = $_GET['land_cover'];    $land_cover = trim($land_cover);    if (isEmpty($land_cover)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");    }    $land_cover = standard_string_prevent_sql_injection($land_cover);    $grazed = $_GET['grazed'];    $grazed = trim($grazed);    if (isEmpty($grazed)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");    }    $grazed = standard_string_prevent_sql_injection($grazed);    $b_grazed = 0;    if (strtoupper($grazed) == 'TRUE'){      $b_grazed = 1;    }    $flooding = $_GET['flooding'];    $flooding = trim($flooding);    if (isEmpty($flooding)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");    }    $flooding = standard_string_prevent_sql_injection($flooding);    $b_flooding = 0;    if (strtoupper($flooding) == 'TRUE'){      $b_flooding = 1;    }    $slope = $_GET['slope'];    $slope = trim($slope);    if (isEmpty($slope)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");    }    $slope = standard_string_prevent_sql_injection($slope);    $slope_shape = $_GET['slope_shape'];    $slope_shape = trim($slope_shape);    if (isEmpty($slope_shape)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");    }    $slope_shape = standard_string_prevent_sql_injection($slope_shape);    $rock_fragment_for_soil_horizon_1 = $_GET['rock_fragment_for_soil_horizon_1'];    $rock_fragment_for_soil_horizon_1 = trim($rock_fragment_for_soil_horizon_1);    $rock_fragment_for_soil_horizon_1 = standard_string_prevent_sql_injection($rock_fragment_for_soil_horizon_1);    $rock_fragment_for_soil_horizon_2 = $_GET['rock_fragment_for_soil_horizon_2'];    $rock_fragment_for_soil_horizon_2 = trim($rock_fragment_for_soil_horizon_2);    $rock_fragment_for_soil_horizon_2 = standard_string_prevent_sql_injection($rock_fragment_for_soil_horizon_2);    $rock_fragment_for_soil_horizon_3 = $_GET['rock_fragment_for_soil_horizon_3'];    $rock_fragment_for_soil_horizon_3 = trim($rock_fragment_for_soil_horizon_3);    $rock_fragment_for_soil_horizon_3 = standard_string_prevent_sql_injection($rock_fragment_for_soil_horizon_3);    $rock_fragment_for_soil_horizon_4 = $_GET['rock_fragment_for_soil_horizon_4'];    $rock_fragment_for_soil_horizon_4 = trim($rock_fragment_for_soil_horizon_4);    $rock_fragment_for_soil_horizon_4 = standard_string_prevent_sql_injection($rock_fragment_for_soil_horizon_4);    $rock_fragment_for_soil_horizon_5 = $_GET['rock_fragment_for_soil_horizon_5'];    $rock_fragment_for_soil_horizon_5 = trim($rock_fragment_for_soil_horizon_5);    $rock_fragment_for_soil_horizon_5 = standard_string_prevent_sql_injection($rock_fragment_for_soil_horizon_5);    $rock_fragment_for_soil_horizon_6 = $_GET['rock_fragment_for_soil_horizon_6'];    $rock_fragment_for_soil_horizon_6 = trim($rock_fragment_for_soil_horizon_6);    $rock_fragment_for_soil_horizon_6 = standard_string_prevent_sql_injection($rock_fragment_for_soil_horizon_6);        $rock_fragment_for_soil_horizon_7 = $_GET['rock_fragment_for_soil_horizon_7'];    $rock_fragment_for_soil_horizon_7 = trim($rock_fragment_for_soil_horizon_7);    $rock_fragment_for_soil_horizon_7 = standard_string_prevent_sql_injection($rock_fragment_for_soil_horizon_7);    $color_for_soil_horizon_1 = $_GET['color_for_soil_horizon_1'];    $color_for_soil_horizon_1 = trim($color_for_soil_horizon_1);    $color_for_soil_horizon_1 = standard_string_prevent_sql_injection($color_for_soil_horizon_1);    $color_for_soil_horizon_2 = $_GET['color_for_soil_horizon_2'];    $color_for_soil_horizon_2 = trim($color_for_soil_horizon_2);    $color_for_soil_horizon_2 = standard_string_prevent_sql_injection($color_for_soil_horizon_2);    $color_for_soil_horizon_3 = $_GET['color_for_soil_horizon_3'];    $color_for_soil_horizon_3 = trim($color_for_soil_horizon_3);    $color_for_soil_horizon_3 = standard_string_prevent_sql_injection($color_for_soil_horizon_3);    $color_for_soil_horizon_4 = $_GET['color_for_soil_horizon_4'];    $color_for_soil_horizon_4 = trim($color_for_soil_horizon_4);    $color_for_soil_horizon_4 = standard_string_prevent_sql_injection($color_for_soil_horizon_4);    $color_for_soil_horizon_5 = $_GET['color_for_soil_horizon_5'];    $color_for_soil_horizon_5 = trim($color_for_soil_horizon_5);    $color_for_soil_horizon_5 = standard_string_prevent_sql_injection($color_for_soil_horizon_5);    $color_for_soil_horizon_6 = $_GET['color_for_soil_horizon_6'];    $color_for_soil_horizon_6 = trim($color_for_soil_horizon_6);    $color_for_soil_horizon_6 = standard_string_prevent_sql_injection($color_for_soil_horizon_6);        $color_for_soil_horizon_7 = $_GET['color_for_soil_horizon_7'];    $color_for_soil_horizon_7 = trim($color_for_soil_horizon_7);    $color_for_soil_horizon_7 = standard_string_prevent_sql_injection($color_for_soil_horizon_7);    $texture_for_soil_horizon_1 = $_GET['texture_for_soil_horizon_1'];    $texture_for_soil_horizon_1 = trim($texture_for_soil_horizon_1);    $texture_for_soil_horizon_1 = standard_string_prevent_sql_injection($texture_for_soil_horizon_1);    $texture_for_soil_horizon_2 = $_GET['texture_for_soil_horizon_2'];    $texture_for_soil_horizon_2 = trim($texture_for_soil_horizon_2);    $texture_for_soil_horizon_2 = standard_string_prevent_sql_injection($texture_for_soil_horizon_2);    $texture_for_soil_horizon_3 = $_GET['texture_for_soil_horizon_3'];    $texture_for_soil_horizon_3 = trim($texture_for_soil_horizon_3);    $texture_for_soil_horizon_3 = standard_string_prevent_sql_injection($texture_for_soil_horizon_3);    $texture_for_soil_horizon_4 = $_GET['texture_for_soil_horizon_4'];    $texture_for_soil_horizon_4 = trim($texture_for_soil_horizon_4);    $texture_for_soil_horizon_4 = standard_string_prevent_sql_injection($texture_for_soil_horizon_4);    $texture_for_soil_horizon_5 = $_GET['texture_for_soil_horizon_5'];    $texture_for_soil_horizon_5 = trim($texture_for_soil_horizon_5);    $texture_for_soil_horizon_5 = standard_string_prevent_sql_injection($texture_for_soil_horizon_5);    $texture_for_soil_horizon_6 = $_GET['texture_for_soil_horizon_6'];    $texture_for_soil_horizon_6 = trim($texture_for_soil_horizon_6);    $texture_for_soil_horizon_6 = standard_string_prevent_sql_injection($texture_for_soil_horizon_6);        $texture_for_soil_horizon_7 = $_GET['texture_for_soil_horizon_7'];    $texture_for_soil_horizon_7 = trim($texture_for_soil_horizon_7);    $texture_for_soil_horizon_7 = standard_string_prevent_sql_injection($texture_for_soil_horizon_7);    $surface_cracking = $_GET['surface_cracking'];    $surface_cracking = trim($surface_cracking);    if (isEmpty($surface_cracking)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");      $surface_cracking = 'TRUE';    }    $surface_cracking = standard_string_prevent_sql_injection($surface_cracking);    $b_surface_cracking = 0;    if (strtoupper($surface_cracking) == 'TRUE'){      $b_surface_cracking = 1;    }    $surface_salt = $_GET['surface_salt'];    $surface_salt = trim($surface_salt);    if (isEmpty($surface_salt)){      //return error_request_from_external_device("108", "Modified Date must be not NULL");    }    $surface_salt = standard_string_prevent_sql_injection($surface_salt);    $b_surface_salt = 0;    if (strtoupper($surface_salt) == 'TRUE'){      $b_surface_salt = 1;    }    $ip_address = get_ip_address_client();        /**     * Insert cai cua no ngu si dan don thoi thay nay truoc     * Enter description here ...     * @var unknown_type     */    //$result_insert_new = insert_landpks_input_plot_new($name, $recorder_name, $organization, $latitude, $longitude, $city, $modified_date, $land_cover, $grazed, $b_grazed, $flooding, $b_flooding, $slope, $slope_shape, $rock_fragment_for_soil_horizon_1, $rock_fragment_for_soil_horizon_2, $rock_fragment_for_soil_horizon_3, $rock_fragment_for_soil_horizon_4, $rock_fragment_for_soil_horizon_5, $rock_fragment_for_soil_horizon_6, $rock_fragment_for_soil_horizon_7 , $color_for_soil_horizon_1, $color_for_soil_horizon_2 , $color_for_soil_horizon_3, $color_for_soil_horizon_4, $color_for_soil_horizon_5, $color_for_soil_horizon_6, $color_for_soil_horizon_7 , $texture_for_soil_horizon_1, $texture_for_soil_horizon_2, $texture_for_soil_horizon_3, $texture_for_soil_horizon_4, $texture_for_soil_horizon_5, $texture_for_soil_horizon_6, $texture_for_soil_horizon_7 ,$surface_cracking, $b_surface_cracking, $surface_salt, $b_surface_salt,$ip_address);    $result_insert_new = 1985;    /**     * Ket thuc do thoi thay nay     * Enter description here ...     * @var unknown_type     */    //echo $rock_fragment_for_soil_horizon_1;    $result_insert = insert_landpks_input_data_from_apps_to_server($name, $recorder_name, $organization, $latitude, $longitude, $city, $modified_date, $land_cover, $grazed, $b_grazed, $flooding, $b_flooding, $slope, $slope_shape, $rock_fragment_for_soil_horizon_1, $rock_fragment_for_soil_horizon_2, $rock_fragment_for_soil_horizon_3, $rock_fragment_for_soil_horizon_4, $rock_fragment_for_soil_horizon_5, $rock_fragment_for_soil_horizon_6, $rock_fragment_for_soil_horizon_7 , $color_for_soil_horizon_1, $color_for_soil_horizon_2 , $color_for_soil_horizon_3, $color_for_soil_horizon_4, $color_for_soil_horizon_5, $color_for_soil_horizon_6, $color_for_soil_horizon_7 , $texture_for_soil_horizon_1, $texture_for_soil_horizon_2, $texture_for_soil_horizon_3, $texture_for_soil_horizon_4, $texture_for_soil_horizon_5, $texture_for_soil_horizon_6, $texture_for_soil_horizon_7 ,$surface_cracking, $b_surface_cracking, $surface_salt, $b_surface_salt,$ip_address);    /** Case 1 : Data => Return List of Analytics Data after running Relative Calculation **/    $run_model = call_python_script($result_insert,$longitude,$latitude,trim($recorder_name));    /** CASE 2 : DATA => Return only the raw output APEX for Dought **/            /***Update cho thang ngu dan ngu si dan don****/    update_plot_id_to_result_apex_table($result_insert,$result_insert_new);        if ($run_model == -1){        //return error_request_from_external_device('666', 'Error : Dougl facing');        $type = 1;        $record_data_no_apex = get_raw_output_data_NO_APEX_output($result_insert);        $content[0]->ID = $record_data_no_apex->record_id;        $content[0]->name = $record_data_no_apex->record_name;        /*        $content[0]->grass_productivity =  intval(-999);        $content[0]->grass_erosion = intval(-999);        $content[0]->maize_productivity = intval(-999);        $content[0]->maize_erosion = intval(-999);        $content[0]->maize_erosion = intval(-999);        */		$content[0]->grass_productivity = "";        $content[0]->grass_erosion = "";        $content[0]->maize_productivity = "";        $content[0]->maize_erosion = "";                        //GDAL        $content[0]->gdal_elevation = floatval($record_data_no_apex->old_elevation);        $content[0]->gdal_fao_lgp = $record_data_no_apex->fao_lgp;        $content[0]->gdal_aridity_index = floatval($record_data_no_apex->aridity);        //AWC        $content[0]->awc_soil_profile_awc = floatval($record_data_no_apex->soil_profile_awc);                //PRECIP        $content[0]->climate_precip_jan = floatval($record_data_no_apex->climate_precip_jan);        $content[0]->climate_precip_feb = floatval($record_data_no_apex->climate_precip_feb);        $content[0]->climate_precip_mar = floatval($record_data_no_apex->climate_precip_mar);        $content[0]->climate_precip_apr = floatval($record_data_no_apex->climate_precip_apr);        $content[0]->climate_precip_may = floatval($record_data_no_apex->climate_precip_may);        $content[0]->climate_precip_jun = floatval($record_data_no_apex->climate_precip_jun);        $content[0]->climate_precip_jul = floatval($record_data_no_apex->climate_precip_jul);        $content[0]->climate_precip_aug = floatval($record_data_no_apex->climate_precip_aug);        $content[0]->climate_precip_sep = floatval($record_data_no_apex->climate_precip_sep);        $content[0]->climate_precip_oct = floatval($record_data_no_apex->climate_precip_oct);        $content[0]->climate_precip_nov = floatval($record_data_no_apex->climate_precip_nov);        $content[0]->climate_precip_dec = floatval($record_data_no_apex->climate_precip_dec);        $content[0]->climate_precip_annual = floatval($record_data_no_apex->climate_precip_annual);                //AVG_TEMP        $content[0]->climate_avg_temp_jan = floatval($record_data_no_apex->climate_avg_temp_jan);        $content[0]->climate_avg_temp_feb = floatval($record_data_no_apex->climate_avg_temp_feb);        $content[0]->climate_avg_temp_mar = floatval($record_data_no_apex->climate_avg_temp_mar);        $content[0]->climate_avg_temp_apr = floatval($record_data_no_apex->climate_avg_temp_apr);        $content[0]->climate_avg_temp_may = floatval($record_data_no_apex->climate_avg_temp_may);        $content[0]->climate_avg_temp_jun = floatval($record_data_no_apex->climate_avg_temp_jun);        $content[0]->climate_avg_temp_jul = floatval($record_data_no_apex->climate_avg_temp_jul);        $content[0]->climate_avg_temp_aug = floatval($record_data_no_apex->climate_avg_temp_aug);        $content[0]->climate_avg_temp_sep = floatval($record_data_no_apex->climate_avg_temp_sep);        $content[0]->climate_avg_temp_oct = floatval($record_data_no_apex->climate_avg_temp_oct);        $content[0]->climate_avg_temp_nov = floatval($record_data_no_apex->climate_avg_temp_nov);        $content[0]->climate_avg_temp_dec = floatval($record_data_no_apex->climate_avg_temp_dec);                        //MAX_TEMP        $content[0]->climate_max_temp_jan = floatval($record_data_no_apex->climate_max_temp_jan);        $content[0]->climate_max_temp_feb = floatval($record_data_no_apex->climate_max_temp_feb);        $content[0]->climate_max_temp_mar = floatval($record_data_no_apex->climate_max_temp_mar);        $content[0]->climate_max_temp_apr = floatval($record_data_no_apex->climate_max_temp_apr);        $content[0]->climate_max_temp_may = floatval($record_data_no_apex->climate_max_temp_may);        $content[0]->climate_max_temp_jun = floatval($record_data_no_apex->climate_max_temp_jun);        $content[0]->climate_max_temp_jul = floatval($record_data_no_apex->climate_max_temp_jul);        $content[0]->climate_max_temp_aug = floatval($record_data_no_apex->climate_max_temp_aug);        $content[0]->climate_max_temp_sep = floatval($record_data_no_apex->climate_max_temp_sep);        $content[0]->climate_max_temp_oct = floatval($record_data_no_apex->climate_max_temp_oct);        $content[0]->climate_max_temp_nov = floatval($record_data_no_apex->climate_max_temp_nov);        $content[0]->climate_max_temp_dec = floatval($record_data_no_apex->climate_max_temp_dec);                        //MIN_TEMP        $content[0]->climate_min_temp_jan = floatval($record_data_no_apex->climate_min_temp_jan);        $content[0]->climate_min_temp_feb = floatval($record_data_no_apex->climate_min_temp_feb);        $content[0]->climate_min_temp_mar = floatval($record_data_no_apex->climate_min_temp_mar);        $content[0]->climate_min_temp_apr = floatval($record_data_no_apex->climate_min_temp_apr);        $content[0]->climate_min_temp_may = floatval($record_data_no_apex->climate_min_temp_may);        $content[0]->climate_min_temp_jun = floatval($record_data_no_apex->climate_min_temp_jun);        $content[0]->climate_min_temp_jul = floatval($record_data_no_apex->climate_min_temp_jul);        $content[0]->climate_min_temp_aug = floatval($record_data_no_apex->climate_min_temp_aug);        $content[0]->climate_min_temp_sep = floatval($record_data_no_apex->climate_min_temp_sep);        $content[0]->climate_min_temp_oct = floatval($record_data_no_apex->climate_min_temp_oct);        $content[0]->climate_min_temp_nov = floatval($record_data_no_apex->climate_min_temp_nov);        $content[0]->climate_min_temp_dec = floatval($record_data_no_apex->climate_min_temp_dec);                if ($result_insert == 0){            return error_request_from_external_device('999', 'Error Link : Please check link');              } else {            return success_api($type,$content);        }    }    /* Process to get content output to application */    $list_records = array();    $number_of_record = 8;            /** Case 1 : Data => Return List of Analytics Data after running Relative Calculation **/    /*    $list_records = get_list_analytics_data_from_apex_output_and_relative_calculation_model($recorder_name, $number_of_record);    $content[0]->name = $recorder_name;    $strContent_maize_erosion = "";    $strContent_maize_productivity = "";    $strContent_glass_erosion = "";    $strContent_glass_productivity = "";    $int_len = count($list_records);    for($i = 0 ; $i < $int_len ; $i++){        if ($i == $number_of_record - 1){            $strContent_maize_erosion .=  $list_records[$i]['maize_erosion'];            $strContent_maize_productivity .= $list_records[$i]['maize_productivity'];            $strContent_glass_erosion .=  $list_records[$i]['glass_erosion'];            $strContent_glass_productivity .= $list_records[$i]['glass_productivity'];        } else {            $strContent_maize_erosion .=  $list_records[$i]['maize_erosion'] . "|";            $strContent_maize_productivity .= $list_records[$i]['maize_productivity'] . "|";            $strContent_glass_erosion .=  $list_records[$i]['glass_erosion'] ."|";            $strContent_glass_productivity .= $list_records[$i]['glass_productivity'] ."|";        }    }    $content[0]->maize_erosion = $strContent_maize_erosion;    $content[0]->maize_productivity = $strContent_maize_productivity;        $content[0]->grass_productivity = $strContent_glass_productivity;    $content[0]->grass_erosion = $strContent_glass_erosion;    */        $type = 1;            /** CASE 2 : DATA => Return only the raw output APEX for Dought **/    $record_data = get_raw_output_data_from_apex_output($result_insert);    $content[0]->ID = $record_data->record_id;    $content[0]->name = $record_data->record_name;    $content[0]->grass_productivity = floatval($record_data->apex_output_yldg_glass);    $content[0]->grass_erosion = floatval($record_data->apex_output_y_glass);    $content[0]->maize_productivity = floatval($record_data->apex_output_yldg_maize);    $content[0]->maize_erosion = floatval($record_data->apex_output_y_maize);        $record_data_no_apex = get_raw_output_data_NO_APEX_output($result_insert);    //GDAL    $content[0]->gdal_elevation = floatval($record_data_no_apex->old_elevation);    $content[0]->gdal_fao_lgp = $record_data_no_apex->fao_lgp;    $content[0]->gdal_aridity_index = floatval($record_data_no_apex->aridity);    //AWC    $content[0]->awc_soil_profile_awc = floatval($record_data_no_apex->soil_profile_awc);            //PRECIP    $content[0]->climate_precip_jan = floatval($record_data_no_apex->climate_precip_jan);    $content[0]->climate_precip_feb = floatval($record_data_no_apex->climate_precip_feb);    $content[0]->climate_precip_mar = floatval($record_data_no_apex->climate_precip_mar);    $content[0]->climate_precip_apr = floatval($record_data_no_apex->climate_precip_apr);    $content[0]->climate_precip_may = floatval($record_data_no_apex->climate_precip_may);    $content[0]->climate_precip_jun = floatval($record_data_no_apex->climate_precip_jun);    $content[0]->climate_precip_jul = floatval($record_data_no_apex->climate_precip_jul);    $content[0]->climate_precip_aug = floatval($record_data_no_apex->climate_precip_aug);    $content[0]->climate_precip_sep = floatval($record_data_no_apex->climate_precip_sep);    $content[0]->climate_precip_oct = floatval($record_data_no_apex->climate_precip_oct);    $content[0]->climate_precip_nov = floatval($record_data_no_apex->climate_precip_nov);    $content[0]->climate_precip_dec = floatval($record_data_no_apex->climate_precip_dec);    $content[0]->climate_precip_annual = floatval($record_data_no_apex->climate_precip_annual);        //AVG_TEMP    $content[0]->climate_avg_temp_jan = floatval($record_data_no_apex->climate_avg_temp_jan);    $content[0]->climate_avg_temp_feb = floatval($record_data_no_apex->climate_avg_temp_feb);    $content[0]->climate_avg_temp_mar = floatval($record_data_no_apex->climate_avg_temp_mar);    $content[0]->climate_avg_temp_apr = floatval($record_data_no_apex->climate_avg_temp_apr);    $content[0]->climate_avg_temp_may = floatval($record_data_no_apex->climate_avg_temp_may);    $content[0]->climate_avg_temp_jun = floatval($record_data_no_apex->climate_avg_temp_jun);    $content[0]->climate_avg_temp_jul = floatval($record_data_no_apex->climate_avg_temp_jul);    $content[0]->climate_avg_temp_aug = floatval($record_data_no_apex->climate_avg_temp_aug);    $content[0]->climate_avg_temp_sep = floatval($record_data_no_apex->climate_avg_temp_sep);    $content[0]->climate_avg_temp_oct = floatval($record_data_no_apex->climate_avg_temp_oct);    $content[0]->climate_avg_temp_nov = floatval($record_data_no_apex->climate_avg_temp_nov);    $content[0]->climate_avg_temp_dec = floatval($record_data_no_apex->climate_avg_temp_dec);                    //MAX_TEMP    $content[0]->climate_max_temp_jan = floatval($record_data_no_apex->climate_max_temp_jan);    $content[0]->climate_max_temp_feb = floatval($record_data_no_apex->climate_max_temp_feb);    $content[0]->climate_max_temp_mar = floatval($record_data_no_apex->climate_max_temp_mar);    $content[0]->climate_max_temp_apr = floatval($record_data_no_apex->climate_max_temp_apr);    $content[0]->climate_max_temp_may = floatval($record_data_no_apex->climate_max_temp_may);    $content[0]->climate_max_temp_jun = floatval($record_data_no_apex->climate_max_temp_jun);    $content[0]->climate_max_temp_jul = floatval($record_data_no_apex->climate_max_temp_jul);    $content[0]->climate_max_temp_aug = floatval($record_data_no_apex->climate_max_temp_aug);    $content[0]->climate_max_temp_sep = floatval($record_data_no_apex->climate_max_temp_sep);    $content[0]->climate_max_temp_oct = floatval($record_data_no_apex->climate_max_temp_oct);    $content[0]->climate_max_temp_nov = floatval($record_data_no_apex->climate_max_temp_nov);    $content[0]->climate_max_temp_dec = floatval($record_data_no_apex->climate_max_temp_dec);                    //MIN_TEMP    $content[0]->climate_min_temp_jan = floatval($record_data_no_apex->climate_min_temp_jan);    $content[0]->climate_min_temp_feb = floatval($record_data_no_apex->climate_min_temp_feb);    $content[0]->climate_min_temp_mar = floatval($record_data_no_apex->climate_min_temp_mar);    $content[0]->climate_min_temp_apr = floatval($record_data_no_apex->climate_min_temp_apr);    $content[0]->climate_min_temp_may = floatval($record_data_no_apex->climate_min_temp_may);    $content[0]->climate_min_temp_jun = floatval($record_data_no_apex->climate_min_temp_jun);    $content[0]->climate_min_temp_jul = floatval($record_data_no_apex->climate_min_temp_jul);    $content[0]->climate_min_temp_aug = floatval($record_data_no_apex->climate_min_temp_aug);    $content[0]->climate_min_temp_sep = floatval($record_data_no_apex->climate_min_temp_sep);    $content[0]->climate_min_temp_oct = floatval($record_data_no_apex->climate_min_temp_oct);    $content[0]->climate_min_temp_nov = floatval($record_data_no_apex->climate_min_temp_nov);    $content[0]->climate_min_temp_dec = floatval($record_data_no_apex->climate_min_temp_dec);            if ($result_insert == 0){      return error_request_from_external_device('999', 'Error Link : Please check link');          } else {      return success_api($type,$content);    }  } catch (Exception $ex){    return error_request_from_external_device('990', $ex->getMessage());  }}