{
    "swagger": "2.0",
    "info": {
        "title": "LandPKS API System",
        "description": "This is Web Service description for LandPKS Project API System. This documentation follows [..] to describe all Web Services API operations of LandPKS Project. It allows third-parties and developers be able to interact with LandPKS's data (LandInfo, LandCover...).",
        "version": "1.0.0"
    },
    "host": "api.landpotential.org",
    "schemes": [
        "https",
        "http"
    ],
    "basePath": "/query",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/query?version=&action=put&object=landinfo": {
            "put": {
                "summary": "Insert a new LandInfo object",
                "description": "This operation allows to insert new data object of LandInfo to cloud data store. \n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the plot where data was collected.",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "recorder_name",
                        "in": "query",
                        "description": "LandInfo recorder name. It is email that users registered to use LandPKS services.",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "test_plot",
                        "in": "query",
                        "description": "Identifies plot as test plot (deleted from database after 30 days from upload) or real plot (permanant record in database), TRUE = test plot, FALSE = real plot.",
                        "required": true,
                        "type": "boolean",
                        "format": "boolean"
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "description": "Organization.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude of plot's geographic location in decimal degrees.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude of plot's geographic location in decimal degrees.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City location.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "modified_date",
                        "in": "query",
                        "description": "Time stamp for successful upload of data collected.",
                        "required": false,
                        "type": "datetime",
                        "format": "string"
                    },
                    {
                        "name": "land_cover",
                        "in": "query",
                        "description": "Observed land cover. Land cover selections are a modified version of NRCS and WOCAT classes.",
                        "required": false,
                        "type": "lists",
                        "format": "String - separated by comma"
                    },
                    {
                        "name": "grazed",
                        "in": "query",
                        "description": "Local knowledge of grazing. TRUE = yes, this land has been grazed by livestock in the last year; FALSE = no, this land has not been grazed in the last year.",
                        "required": false,
                        "type": "boolean",
                        "format": "string"
                    },
                    {
                        "name": "grazing",
                        "in": "query",
                        "description": "IF grazed = TRUE, THEN type of animals that are grazing listed (any combination of LIVESTOCK, GOATS, SHEEP, WILDLIFE).",
                        "required": false,
                        "type": "List",
                        "format": "String - separated by comma"
                    },
                    {
                        "name": "flooding",
                        "in": "query",
                        "description": "Local knowledge of flooding. TRUE = yes, this land has flooded for more than 2 weeks in the last year; FALSE = no, this land has not been flooded for more than 2 weeks in the.",
                        "required": false,
                        "type": "boolean",
                        "format": "string"
                    },
                    {
                        "name": "slope",
                        "in": "query",
                        "description": "Slope in degrees. Option for either discrete value (using clinometer on phone) or slope classes (using icons on phone).",
                        "required": true,
                        "type": "string",
                        "format": "string {0-2% ; 3-5% ; 6-10% ; 11-15% ; 16-30% ; 31-60% ; >60%}"
                    },
                    {
                        "name": "slope_shape",
                        "in": "query",
                        "description": "Shape of both downslope and crosslope (linear, convex, concave).",
                        "required": true,
                        "type": "List",
                        "format": "String - separated by comma"
                    },
                    {
                        "name": "bedrock_depth",
                        "in": "query",
                        "description": "If digging stopped due to reaching bedrock, level at which digging stopped (in cm).",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "stopped_digging_depth",
                        "in": "query",
                        "description": "If digging stopped due to any reason other than reaching bedrock, level at which digging stopped (in cm).",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "rock_fragment_for_soil_horizon_1",
                        "in": "query",
                        "description": "Percent of soil containing rock fragments (fragments > 5mm diameter) Horizontal layer 1.",
                        "required": false,
                        "type": "string",
                        "format": "Single element in set {0-15% ; 15-35% ; 35-60% ; >60%}"
                    },
                    {
                        "name": "rock_fragment_for_soil_horizon_2",
                        "in": "query",
                        "description": "Percent of soil containing rock fragments (fragments > 5mm diameter) Horizontal layer 2.",
                        "required": false,
                        "type": "string",
                        "format": "Single element in set {0-15% ; 15-35% ; 35-60% ; >60%}"
                    },
					{
                        "name": "rock_fragment_for_soil_horizon_3",
                        "in": "query",
                        "description": "Percent of soil containing rock fragments (fragments > 5mm diameter) Horizontal layer 3.",
                        "required": false,
                        "type": "string",
                        "format": "Single element in set {0-15% ; 15-35% ; 35-60% ; >60%}"
                    },
					{
                        "name": "rock_fragment_for_soil_horizon_4",
                        "in": "query",
                        "description": "Percent of soil containing rock fragments (fragments > 5mm diameter) Horizontal layer 4.",
                        "required": false,
                        "type": "string",
                        "format": "Single element in set {0-15% ; 15-35% ; 35-60% ; >60%}"
                    },
					{
                        "name": "rock_fragment_for_soil_horizon_5",
                        "in": "query",
                        "description": "Percent of soil containing rock fragments (fragments > 5mm diameter) Horizontal layer 5.",
                        "required": false,
                        "type": "string",
                        "format": "Single element in set {0-15% ; 15-35% ; 35-60% ; >60%}"
                    },
					{
                        "name": "rock_fragment_for_soil_horizon_6",
                        "in": "query",
                        "description": "Percent of soil containing rock fragments (fragments > 5mm diameter) Horizontal layer 6.",
                        "required": false,
                        "type": "string",
                        "format": "Single element in set {0-15% ; 15-35% ; 35-60% ; >60%}"
                    },
					{
                        "name": "rock_fragment_for_soil_horizon_7",
                        "in": "query",
                        "description": "Percent of soil containing rock fragments (fragments > 5mm diameter) Horizontal layer 7.",
                        "required": false,
                        "type": "string",
                        "format": "Single element in set {0-15% ; 15-35% ; 35-60% ; >60%}"
                    }
                ],
                "tags": [
                    "LandInfo",
                    "Put"
                ],
                "responses": {
                    "200": {
                        "description": "An array of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/estimates/price": {
            "get": {
                "summary": "Price Estimates",
                "description": "The Price Estimates endpoint returns an estimated price range\nfor each product offered at a given location. The price estimate is\nprovided as a formatted string with the full price range and the localized\ncurrency symbol.<br><br>The response also includes low and high estimates,\nand the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for\nsituations requiring currency conversion. When surge is active for a particular\nproduct, its surge_multiplier will be greater than 1, but the price estimate\nalready factors in this multiplier.\n",
                "parameters": [
                    {
                        "name": "start_latitude",
                        "in": "query",
                        "description": "Latitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "start_longitude",
                        "in": "query",
                        "description": "Longitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "end_latitude",
                        "in": "query",
                        "description": "Latitude component of end location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "end_longitude",
                        "in": "query",
                        "description": "Longitude component of end location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "tags": [
                    "Estimates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of price estimates by product",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PriceEstimate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/estimates/time": {
            "get": {
                "summary": "Time Estimates",
                "description": "The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.",
                "parameters": [
                    {
                        "name": "start_latitude",
                        "in": "query",
                        "description": "Latitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "start_longitude",
                        "in": "query",
                        "description": "Longitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "customer_uuid",
                        "in": "query",
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique customer identifier to be used for experience customization."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "type": "string",
                        "description": "Unique identifier representing a specific product for a given latitude & longitude."
                    }
                ],
                "tags": [
                    "Estimates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "summary": "User Profile",
                "description": "The User Profile endpoint returns information about the Uber user that has authorized with the application.",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Profile information for a user",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "summary": "User Activity",
                "description": "The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is zero."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 5, maximum is 100."
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "History information for the given user",
                        "schema": {
                            "$ref": "#/definitions/Activities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Product": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
                },
                "description": {
                    "type": "string",
                    "description": "Description of product."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "image": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "PriceEstimate": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles"
                },
                "currency_code": {
                    "type": "string",
                    "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "estimate": {
                    "type": "string",
                    "description": "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI."
                },
                "low_estimate": {
                    "type": "number",
                    "description": "Lower bound of the estimated price."
                },
                "high_estimate": {
                    "type": "number",
                    "description": "Upper bound of the estimated price."
                },
                "surge_multiplier": {
                    "type": "number",
                    "description": "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier."
                }
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "First name of the Uber user."
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name of the Uber user."
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the Uber user"
                },
                "picture": {
                    "type": "string",
                    "description": "Image URL of the Uber user."
                },
                "promo_code": {
                    "type": "string",
                    "description": "Promo code of the Uber user."
                }
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier for the activity"
                }
            }
        },
        "Activities": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}
